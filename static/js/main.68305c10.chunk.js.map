{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","onTabSelected","selectedTabId","tabs","id","find","tab","className","map","cn","href","onClick","title","content","App","useState","currentTab","setCurrentTab","findTabs","ReactDOM","render","document","getElementById"],"mappings":"kNAgBaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAC,EACI,EADJA,KAIQC,GAFSD,EAAKE,MAAK,SAACC,GAAD,OAASA,EAAIF,KAAOF,MAAkBC,EAAK,IAE9DC,GAER,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKG,UAAU,gBAAf,SACE,6BACGJ,EAAKK,KAAI,SAACF,GAAD,OACR,oBACEC,UAAWE,IAAG,CAAE,YAAaH,EAAIF,KAAOA,IACxC,UAAQ,MAFV,SAKE,mBACEM,KAAI,WAAMJ,EAAIF,IACd,UAAQ,UACRO,QAAS,WACHP,IAAOE,EAAIF,IACbH,EAAcK,IALpB,SASGA,EAAIM,SAXFN,EAAIF,WAkBjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,mBACGJ,EAAKE,MAAK,SAACC,GAAD,OAASA,EAAIF,KAAOA,YADjC,aACG,EAAmCS,cC9C/BV,EAAO,CAClB,CAAEC,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,eACxC,CAAET,GAAI,QAASQ,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAAO,IAAD,EACjC,EAAoCC,mBAASZ,EAAK,IAAlD,mBAAOa,EAAP,KAAmBC,EAAnB,KACMC,EAAQ,UAAGf,EAAKE,MAAK,SAACC,GAAD,OAASA,EAAIF,KAAOY,EAAWZ,aAA5C,aAAG,EAA8CQ,MAE/D,OACE,sBAAKL,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCAA0CW,KAE1C,cAAC,EAAD,CACEjB,cAAegB,EACff,cAAec,EAAWZ,GAC1BD,KAAMA,QCpBdgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.68305c10.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Tab } from './types/Tab';\n\nexport const tabsCollection = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\ntype Props = {\n  tabs: Tab[];\n  onTabSelected: (tab: Tab) => void;\n  selectedTabId: string;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  onTabSelected,\n  selectedTabId,\n  tabs,\n}) => {\n  const validTab = tabs.find((tab) => tab.id === selectedTabId) || tabs[0];\n\n  const { id } = validTab;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={cn({ 'is-active': tab.id === id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  if (id !== tab.id) {\n                    onTabSelected(tab);\n                  }\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find((tab) => tab.id === id)?.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\n  const findTabs = tabs.find((tab) => tab.id === currentTab.id)?.title;\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">{`Selected tab is ${findTabs}`}</h1>\n\n      <Tabs\n        onTabSelected={setCurrentTab}\n        selectedTabId={currentTab.id}\n        tabs={tabs}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}